digraph configDependents {
  rankdir=LR;
  node [shape=box]
  "Health" -> "Health"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/health/index.ts" -> "Health"
  "Worker" -> "Health"
  "HealthStatus" -> "HealthStatus"
  "runHealthcheck" -> "HealthStatus"
  "RequestRunner" -> "RequestRunner"
  "HealthStatus" -> "RequestRunner"
  "Scheduler" -> "RequestRunner"
  "runHealthcheck" -> "RequestRunner"
  "Scheduler" -> "Scheduler"
  "runHealthcheck" -> "Scheduler"
  "TestRunner" -> "TestRunner"
  "runTest" -> "TestRunner"
  "Worker" -> "Worker"
  "spawnWorker" -> "Worker"
  "main" -> "Worker"
  "newWorkerFromQueue" -> "Worker"
  "runHttpRequest" -> "agentOptions"
  "runHttpRequestUnsafe" -> "agentOptions"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "dnsLookup"
  "dnsLookupWithDefaultParameters" -> "dnsLookup"
  "resolveHost" -> "dnsLookup"
  "resolveIp" -> "dnsLookup"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "dnsLookupWithDefaultParameters"
  "resolveAndValidateDnsServer" -> "dnsLookupWithDefaultParameters"
  "agentOptions" -> "dnsLookupWithDefaultParameters"
  "lookup" -> "dnsLookupWithDefaultParameters"
  "netConnectOpts" -> "dnsLookupWithDefaultParameters"
  "makeBrowserRequestForBrowserTest" -> "dnsLookupWithDefaultParameters"
  "performUdpRequest" -> "dnsLookupWithDefaultParameters"
  "RequestRunner" -> "dnsLookupWithDefaultParameters"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "doOneAttempt"
  "dnsLookup" -> "doOneAttempt"
  "doSteps" -> "doStep"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "doStep"
  "runMultiTest" -> "doSteps"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "doSteps"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tests/do-test.ts" -> "doTest"
  "newWorkerFromQueue" -> "doTest"
  "performDnsRequests" -> "getDnsResolvers"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/dns-request.ts" -> "getDnsResolvers"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/config/config.ts" -> "getDomainFilterRegexes"
  "validateDomainName" -> "getDomainFilterRegexes"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tests/traceroute.ts" -> "handleStdout"
  "runTraceroute" -> "handleStdout"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "internalDnsLookup"
  "doOneAttempt" -> "internalDnsLookup"
  "runRequest" -> "lookup"
  "runSSLRequestUnsafe" -> "lookup"
  "performWebsocketRequest" -> "lookup"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/cli/start-worker.ts" -> "main"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/cli/start-healthcheck.ts" -> "main"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-api/entrypoint.ts" -> "makeAPIRequest"
  "doTest" -> "makeAPIRequest"
  "performSingleHealthCheck" -> "makeAPIRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-browser/entrypoint.ts" -> "makeBrowserRequestForBrowserTest"
  "makeBrowserRequestForBrowserTest" -> "makeBrowserRequestForBrowserTest"
  "performOneTcpRequest" -> "netConnectOpts"
  "main" -> "newWorkerFromQueue"
  "runDNSRequestUnsafe" -> "performDnsRequests"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/dns-request.ts" -> "performDnsRequests"
  "runICMPRequest" -> "performIcmpRequests"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-icmp/icmp-request.ts" -> "performIcmpRequests"
  "performTcpRequests" -> "performOneTcpRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tcp/tcp-request.ts" -> "performOneTcpRequest"
  "Health" -> "performSingleHealthCheck"
  "performTcpRequests" -> "performTcpRequestTracerouteIfNeeded"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tcp/tcp-request.ts" -> "performTcpRequestTracerouteIfNeeded"
  "performIcmpRequests" -> "performTcpRequestTracerouteIfNeeded"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-icmp/icmp-request.ts" -> "performTcpRequestTracerouteIfNeeded"
  "runTCPRequest" -> "performTcpRequests"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tcp/tcp-request.ts" -> "performTcpRequests"
  "runUDPRequest" -> "performUdpRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-udp/udp-request.ts" -> "performUdpRequest"
  "runWebsocketRequest" -> "performWebsocketRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-websocket/websocket-request.ts" -> "performWebsocketRequest"
  "ping" -> "ping"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/cli/ping.ts" -> "ping"
  "pingApi" -> "pingApi"
  "ping" -> "pingApi"
  "pingBrowsers" -> "pingBrowsers"
  "ping" -> "pingBrowsers"
  "getDnsResolvers" -> "resolveAndValidateDnsServer"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/dns-request.ts" -> "resolveAndValidateDnsServer"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "resolveHost"
  "performIcmpRequests" -> "resolveHost"
  "performTcpRequestTracerouteIfNeeded" -> "resolveHost"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "resolveIp"
  "handleStdout" -> "resolveIp"
  "doStep" -> "retryStep"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "retryStep"
  "retryStep" -> "retryStep"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/dns-request.ts" -> "runDNSRequest"
  "runDNSTest" -> "runDNSRequest"
  "runMultiRequest" -> "runDNSRequest"
  "pingApi" -> "runDNSRequest"
  "runDNSRequest" -> "runDNSRequestUnsafe"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/index.ts" -> "runDNSTest"
  "makeAPIRequest" -> "runDNSTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/healthcheck/index.ts" -> "runHealthcheck"
  "main" -> "runHealthcheck"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-http/http-request.ts" -> "runHttpRequest"
  "runHttpTest" -> "runHttpRequest"
  "runMultiRequest" -> "runHttpRequest"
  "TestRunner" -> "runHttpRequest"
  "pingApi" -> "runHttpRequest"
  "runHttpRequest" -> "runHttpRequestUnsafe"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-http/index.ts" -> "runHttpTest"
  "makeAPIRequest" -> "runHttpTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-icmp/icmp-request.ts" -> "runICMPRequest"
  "runICMPTest" -> "runICMPRequest"
  "pingApi" -> "runICMPRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-icmp/index.ts" -> "runICMPTest"
  "makeAPIRequest" -> "runICMPTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/multi-request.ts" -> "runMultiRequest"
  "retryStep" -> "runMultiRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "runMultiTest"
  "makeAPIRequest" -> "runMultiTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-ssl/ssl-request.ts" -> "runRequest"
  "runSSLRequest" -> "runRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-ssl/ssl-request.ts" -> "runSSLRequest"
  "runSSLTest" -> "runSSLRequest"
  "runMultiRequest" -> "runSSLRequest"
  "pingApi" -> "runSSLRequest"
  "runRequest" -> "runSSLRequestUnsafe"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-ssl/index.ts" -> "runSSLTest"
  "makeAPIRequest" -> "runSSLTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tcp/tcp-request.ts" -> "runTCPRequest"
  "runTCPTest" -> "runTCPRequest"
  "runMultiRequest" -> "runTCPRequest"
  "pingApi" -> "runTCPRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tcp/index.ts" -> "runTCPTest"
  "makeAPIRequest" -> "runTCPTest"
  "runTest" -> "runTest"
  "makeBrowserRequestForBrowserTest" -> "runTest"
  "pingBrowsers" -> "runTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tests/traceroute.ts" -> "runTraceroute"
  "performTcpRequestTracerouteIfNeeded" -> "runTraceroute"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-udp/udp-request.ts" -> "runUDPRequest"
  "runUDPTest" -> "runUDPRequest"
  "pingApi" -> "runUDPRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-udp/index.ts" -> "runUDPTest"
  "makeAPIRequest" -> "runUDPTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-websocket/websocket-request.ts" -> "runWebsocketRequest"
  "runWebsocketTest" -> "runWebsocketRequest"
  "runMultiRequest" -> "runWebsocketRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-websocket/index.ts" -> "runWebsocketTest"
  "makeAPIRequest" -> "runWebsocketTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/cli/start-worker.ts" -> "spawnWorker"
  "main" -> "spawnWorker"
  "validateHostname" -> "validateDomainName"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "validateDomainName"
  "internalDnsLookup" -> "validateHostname"
  "validateURL" -> "validateHostname"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "validateHostname"
  "runDNSRequest" -> "validateHostname"
  "resolveAndValidateDnsServer" -> "validateHostname"
  "performIcmpRequests" -> "validateHostname"
  "runRequest" -> "validateHostname"
  "runTCPRequest" -> "validateHostname"
  "runUDPRequest" -> "validateHostname"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/dns.ts" -> "validateURL"
  "runHttpRequest" -> "validateURL"
  "runHttpRequestUnsafe" -> "validateURL"
  "runWebsocketRequest" -> "validateURL"
}