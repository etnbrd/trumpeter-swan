digraph configDependents {
  rankdir=LR;
  node [shape=box]
  "Health" -> "Health"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/health/index.ts" -> "Health"
  "Worker" -> "Health"
  "TestRunner" -> "TestRunner"
  "runTest" -> "TestRunner"
  "Worker" -> "Worker"
  "spawnWorker" -> "Worker"
  "main" -> "Worker"
  "newWorkerFromQueue" -> "Worker"
  "computeAssertionResult" -> "applyOperation"
  "applyOperation" -> "applyOperation"
  "applyOperationOnMultipleValues" -> "applyOperation"
  "computeAssertionResult" -> "applyOperationOnMultipleValues"
  "applyOperationOnMultipleValues" -> "applyOperationOnMultipleValues"
  "computeAssertionsResults" -> "computeAssertionResult"
  "computeAssertionResult" -> "computeAssertionResult"
  "computeAssertions" -> "computeAssertionResult"
  "runICMPRequest" -> "computeAssertions"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-icmp/icmp-request.ts" -> "computeAssertions"
  "runDNSRequestUnsafe" -> "computeAssertions"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/dns-request.ts" -> "computeAssertions"
  "computeAssertionsResults" -> "computeAssertionsResults"
  "doAssertions" -> "computeAssertionsResults"
  "computeAssertions" -> "computeAssertionsResults"
  "runTCPRequest" -> "computeAssertionsResults"
  "runWebsocketRequest" -> "computeAssertionsResults"
  "runUDPRequest" -> "computeAssertionsResults"
  "onEnd" -> "doAssertions"
  "runHttpRequestUnsafe" -> "doAssertions"
  "runSSLRequest" -> "doAssertions"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-ssl/ssl-request.ts" -> "doAssertions"
  "doSteps" -> "doStep"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "doStep"
  "runMultiTest" -> "doSteps"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "doSteps"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tests/do-test.ts" -> "doTest"
  "newWorkerFromQueue" -> "doTest"
  "extractValueFromHeader" -> "extractValue"
  "extractValueFromBody" -> "extractValue"
  "extractValue" -> "extractValue"
  "extractValues" -> "extractValueFromBody"
  "extractValueFromBody" -> "extractValueFromBody"
  "extractValues" -> "extractValueFromHeader"
  "extractValueFromHeader" -> "extractValueFromHeader"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tests/extract-values.ts" -> "extractValues"
  "extractValuesIfNeeded" -> "extractValues"
  "onEnd" -> "extractValuesIfNeeded"
  "runHttpRequestUnsafe" -> "extractValuesIfNeeded"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/cli/start-worker.ts" -> "main"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-api/entrypoint.ts" -> "makeAPIRequest"
  "doTest" -> "makeAPIRequest"
  "performSingleHealthCheck" -> "makeAPIRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-browser/entrypoint.ts" -> "makeBrowserRequestForBrowserTest"
  "makeBrowserRequestForBrowserTest" -> "makeBrowserRequestForBrowserTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-browser/checks.ts" -> "matchRegex"
  "main" -> "newWorkerFromQueue"
  "runHttpRequestUnsafe" -> "onData"
  "onData" -> "onEnd"
  "runHttpRequestUnsafe" -> "onEnd"
  "Health" -> "performSingleHealthCheck"
  "ping" -> "ping"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/cli/ping.ts" -> "ping"
  "pingApi" -> "pingApi"
  "ping" -> "pingApi"
  "pingBrowsers" -> "pingBrowsers"
  "ping" -> "pingBrowsers"
  "regexExtract" -> "regexExtract"
  "extractValue" -> "regexExtract"
  "regexTest" -> "regexScript"
  "regexExtract" -> "regexScript"
  "regexScript" -> "regexScript"
  "regexTest" -> "regexTest"
  "applyOperation" -> "regexTest"
  "matchRegex" -> "regexTest"
  "doStep" -> "retryStep"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "retryStep"
  "retryStep" -> "retryStep"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/dns-request.ts" -> "runDNSRequest"
  "runDNSTest" -> "runDNSRequest"
  "runMultiRequest" -> "runDNSRequest"
  "pingApi" -> "runDNSRequest"
  "runDNSRequest" -> "runDNSRequestUnsafe"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-dns/index.ts" -> "runDNSTest"
  "makeAPIRequest" -> "runDNSTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-http/http-request.ts" -> "runHttpRequest"
  "runHttpTest" -> "runHttpRequest"
  "runMultiRequest" -> "runHttpRequest"
  "TestRunner" -> "runHttpRequest"
  "pingApi" -> "runHttpRequest"
  "runHttpRequest" -> "runHttpRequestUnsafe"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-http/index.ts" -> "runHttpTest"
  "makeAPIRequest" -> "runHttpTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-icmp/icmp-request.ts" -> "runICMPRequest"
  "runICMPTest" -> "runICMPRequest"
  "pingApi" -> "runICMPRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-icmp/index.ts" -> "runICMPTest"
  "makeAPIRequest" -> "runICMPTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/multi-request.ts" -> "runMultiRequest"
  "retryStep" -> "runMultiRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-multi/index.ts" -> "runMultiTest"
  "makeAPIRequest" -> "runMultiTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-ssl/ssl-request.ts" -> "runSSLRequest"
  "runSSLTest" -> "runSSLRequest"
  "runMultiRequest" -> "runSSLRequest"
  "pingApi" -> "runSSLRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-ssl/index.ts" -> "runSSLTest"
  "makeAPIRequest" -> "runSSLTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tcp/tcp-request.ts" -> "runTCPRequest"
  "runTCPTest" -> "runTCPRequest"
  "runMultiRequest" -> "runTCPRequest"
  "pingApi" -> "runTCPRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-tcp/index.ts" -> "runTCPTest"
  "makeAPIRequest" -> "runTCPTest"
  "runTest" -> "runTest"
  "makeBrowserRequestForBrowserTest" -> "runTest"
  "pingBrowsers" -> "runTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-udp/udp-request.ts" -> "runUDPRequest"
  "runUDPTest" -> "runUDPRequest"
  "pingApi" -> "runUDPRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-udp/index.ts" -> "runUDPTest"
  "makeAPIRequest" -> "runUDPTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-websocket/websocket-request.ts" -> "runWebsocketRequest"
  "runWebsocketTest" -> "runWebsocketRequest"
  "runMultiRequest" -> "runWebsocketRequest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/synthetics-websocket/index.ts" -> "runWebsocketTest"
  "makeAPIRequest" -> "runWebsocketTest"
  "/Users/etienne.brodu/dd/synthetics-worker/worker/src/cli/start-worker.ts" -> "spawnWorker"
  "main" -> "spawnWorker"
}